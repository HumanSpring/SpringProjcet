<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.OEMarket.mapper.CommentMapper">
	<sql id="commentColumns">
		"comment_no", 
		"board_no", 
		"user_no", 
		"secret_yn", 
		"content", 
		"parent", 
		"depth", 
		"write_date", 
		"modifier", 
		"modify_date", 
		"delete_yn"
	</sql>
	
	<!-- selectCommentList를 위한 columns -->
	<!-- LPAD function은 데이터 왼쪽에 지정된 문자(?)를 추가해줌. 의도한 역할은 계층형 구조를 나타내기 위함. -->
	<sql id="commentViewColumns">
		"comment_no", 
		"board_no", 
		"user_no", 
		"secret_yn", 
		LPAD('ㄴ', 4*("depth" - 1)) || "content" AS "content", 
		"parent", 
		"depth", 
		"write_date", 
		"modifier", 
		"modify_date", 
		"delete_yn"
	</sql>
	
	<insert id="insertComment" parameterType="CommentDTO">
		INSERT INTO	"COMMENT" (
			<include refid="commentColumns" />
		)
		VALUES(
			comment_no_seq.nextval, 
			#{boardNo}, 
			#{userNo}, 
			NVL(#{secretYn}, 0),
			#{content}, 
			#{parent},  
			#{depth}, 
			SYSDATE, 
			NULL, 
			NULL, 
			0
		)
	</insert>
	
	<select id="selectCommentDetail" resultType="CommentDTO" parameterType="long">
		SELECT
			<include refid="commentColumns" />
		FROM
			"COMMENT"
		WHERE
			"comment_no" = #{commentNo}
		AND
			"delete_yn" = 0
	</select>

	<update id="updateComment" parameterType="CommentDTO">
		UPDATE
			"COMMENT"
		SET
			"modify_date" = SYSDATE, 
			"content" = #{content}, 
			"modifier" = #{modifier}
		WHERE
			"comment_no" = #{commentNo}
	</update>
	
	<update id="deleteComment" parameterType="long">
		UPDATE
			"COMMENT"
		SET
			"delete_yn" = 1, 
			"modify_date" = SYSDATE, 
			"modifier" = #{modifier}
		WHERE
			"comment_no" = #{commentNo}
			
	</update>

	<!-- 입력된 게시글의 댓글을 불러오는 쿼리 삭제되지 않았거나(delete_yn = 0) 
	삭제되었다면(delete_yn = 1) 자기자신(comment_no)을 부모(parent)로 참조하는 댓글이 없다면 출력하지 않고 
	참조하는 댓글이 있다면 출력함. -->
	<select id="selectCommentList" resultType="CommentDTO" parameterType="CommentDTO">
		SELECT
			<include refid="commentViewColumns"/>
		FROM "COMMENT"
		WHERE "board_no" = #{boardNo}
		AND "delete_yn" = 0
		OR ("delete_yn" = 1
			AND "comment_no" 
			IN (SELECT "parent" FROM "COMMENT")
			)
		START WITH
			"depth" = 1
		CONNECT BY PRIOR
			"comment_no" = "parent"
	</select>
	
	<select id="selectCommentTotalCount" resultType="int" parameterType="CommentDTO">
		SELECT
			COUNT(*)
		FROM
			"COMMENT"
		WHERE
			"delete_yn" = 0
		AND
			"board_no" = #{boardNo}
	</select>
	
</mapper>